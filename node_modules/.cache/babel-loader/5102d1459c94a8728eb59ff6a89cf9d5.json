{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Divider, Form, Input, Button, Segment, Message, Select } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport record from '..//ethereum/record';\nimport web3 from '../../ethereum/web3';\nvar options = [{\n  key: 'm',\n  text: 'Male',\n  value: 'Male'\n}, {\n  key: 'f',\n  text: 'Female',\n  value: 'Female'\n}, {\n  key: 'o',\n  text: 'Other',\n  value: 'Other'\n}];\nvar allergyOptions = [{\n  key: 'f',\n  text: 'Food',\n  value: 'Food'\n}, {\n  key: 'm',\n  text: 'Medical',\n  value: 'Medical'\n}, {\n  key: 'e',\n  text: 'Environmental',\n  value: 'Environmental'\n}, {\n  key: 'o',\n  text: 'Others',\n  value: 'Others'\n}];\n\nvar EditPatient = /*#__PURE__*/function (_Component) {\n  _inherits(EditPatient, _Component);\n\n  var _super = _createSuper(EditPatient);\n\n  function EditPatient() {\n    var _this;\n\n    _classCallCheck(this, EditPatient);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      ic: '',\n      name: '',\n      phone: '',\n      gender: '',\n      dob: '',\n      height: '',\n      weight: '',\n      houseaddr: '',\n      bloodgroup: '',\n      allergies: '',\n      medication: '',\n      emergencyName: '',\n      emergencyContact: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGender\", function (e, _ref) {\n      var value = _ref.value;\n      return _this.setState({\n        gender: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAllergies\", function (e, _ref2) {\n      var value = _ref2.value;\n      return _this.setState({\n        allergies: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var _this$state, ic, name, phone, gender, dob, height, weight, houseaddr, bloodgroup, allergies, medication, emergencyName, emergencyContact, accounts;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _this$state = _this.state, ic = _this$state.ic, name = _this$state.name, phone = _this$state.phone, gender = _this$state.gender, dob = _this$state.dob, height = _this$state.height, weight = _this$state.weight, houseaddr = _this$state.houseaddr, bloodgroup = _this$state.bloodgroup, allergies = _this$state.allergies, medication = _this$state.medication, emergencyName = _this$state.emergencyName, emergencyContact = _this$state.emergencyContact;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.prev = 3;\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                _context.next = 9;\n                return record.methods.editDetails(ic, name, phone, gender, dob, height, weight, houseaddr, bloodgroup, allergies, medication, emergencyName, emergencyContact).send({\n                  from: accounts[0]\n                });\n\n              case 9:\n                alert(\"Account created successfully!\");\n                Router.pushRoute('/list');\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](3);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n                alert(\"Account already exists\");\n\n              case 17:\n                _this.setState({\n                  loading: false,\n                  ic: '',\n                  name: '',\n                  phone: '',\n                  gender: '',\n                  dob: '',\n                  height: '',\n                  weight: '',\n                  houseaddr: '',\n                  bloodgroup: '',\n                  allergies: '',\n                  medication: '',\n                  emergencyName: '',\n                  emergencyContact: ''\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(EditPatient, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(Segment, {\n        padded: true\n      }, /*#__PURE__*/React.createElement(\"h1\", null, \"Edit Record\")), /*#__PURE__*/React.createElement(Segment, null, /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          marginTop: '20px',\n          marginBottom: '30px'\n        }\n      }, \"General Information\"), /*#__PURE__*/React.createElement(Divider, {\n        clearing: true\n      }), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\"\n      }, /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", null, \"IC\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Eg. 001234010234\",\n        value: this.state.ic,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            ic: event.target.value\n          });\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", null, \"Full Name\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Eg. John Smith\",\n        value: this.state.name,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", null, \"Phone\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Eg. 0123456789\",\n        value: this.state.phone,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            phone: event.target.value\n          });\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\"\n      }, /*#__PURE__*/React.createElement(Form.Field, {\n        label: \"Gender\",\n        control: Select,\n        options: options,\n        onChange: this.handleGender\n      }), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", null, \"Date of Birth\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Eg. 01/01/1997\",\n        value: this.state.dob,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            dob: event.target.value\n          });\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", null, \"Height\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Eg. 183\",\n        label: {\n          basic: true,\n          content: 'cm'\n        },\n        labelPosition: \"right\",\n        value: this.state.height,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            height: event.target.value\n          });\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", null, \"Weight\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Eg. 65\",\n        label: {\n          basic: true,\n          content: 'kg'\n        },\n        labelPosition: \"right\",\n        value: this.state.weight,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            weight: event.target.value\n          });\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\"\n      }, /*#__PURE__*/React.createElement(Form.TextArea, {\n        label: \"House Address\",\n        placeholder: \"Eg. 1234, Jalan Seksyen 1/3, 31900 Kampar, Perak\",\n        value: this.state.houseaddr,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            houseaddr: event.target.value\n          });\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          marginTop: '20px',\n          marginBottom: '30px'\n        }\n      }, \"Medical History\"), /*#__PURE__*/React.createElement(Divider, {\n        clearing: true\n      }), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\"\n      }, /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", null, \"Blood Group\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Eg. A-\",\n        value: this.state.bloodgroup,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            bloodgroup: event.target.value\n          });\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        label: \"Allergies\",\n        control: Select,\n        options: allergyOptions,\n        onChange: this.handleAllergies\n      })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\"\n      }, /*#__PURE__*/React.createElement(Form.TextArea, {\n        label: \"Current Medications\",\n        placeholder: \"Eg. Antidepressants\",\n        value: this.state.medication,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            medication: event.target.value\n          });\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          marginTop: '20px',\n          marginBottom: '30px'\n        }\n      }, \"Emergency Contact\"), /*#__PURE__*/React.createElement(Divider, {\n        clearing: true\n      }), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\"\n      }, /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", null, \"Emergency Contact Name\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Eg. Taylor Smith\",\n        value: this.state.emergencyName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            emergencyName: event.target.value\n          });\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", null, \"Emergency Contact Phone\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Eg. 0124995002\",\n        value: this.state.emergencyContact,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            emergencyContact: event.target.value\n          });\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        loading: this.state.loading\n      }, \"Edit\"))));\n    }\n  }]);\n\n  return EditPatient;\n}(Component);\n\nexport default EditPatient;","map":{"version":3,"sources":["C:/Users/User/Desktop/FYP/FYP1/HalalLogistic/pages/form/edit-patient.js"],"names":["React","Component","Divider","Form","Input","Button","Segment","Message","Select","Layout","record","web3","options","key","text","value","allergyOptions","EditPatient","ic","name","phone","gender","dob","height","weight","houseaddr","bloodgroup","allergies","medication","emergencyName","emergencyContact","loading","errorMessage","e","setState","event","preventDefault","state","eth","getAccounts","accounts","methods","editDetails","send","from","alert","Router","pushRoute","message","marginTop","marginBottom","onSubmit","target","handleGender","basic","content","handleAllergies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Divider, Form, Input, Button, Segment, Message, Select} from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport record from '..//ethereum/record';\r\nimport web3 from '../../ethereum/web3';\r\n\r\nconst options = [\r\n    { key: 'm', text: 'Male', value: 'Male' },\r\n    { key: 'f', text: 'Female', value: 'Female' },\r\n    { key: 'o', text: 'Other', value: 'Other' },\r\n]\r\n\r\nconst allergyOptions = [\r\n    { key: 'f', text: 'Food', value: 'Food' },\r\n    { key: 'm', text: 'Medical', value: 'Medical' },\r\n    { key: 'e', text: 'Environmental', value: 'Environmental' },\r\n    { key: 'o', text: 'Others', value: 'Others' },\r\n]\r\n\r\nclass EditPatient extends Component {\r\n    state = {\r\n        ic: '',\r\n        name: '',\r\n        phone: '',\r\n        gender: '',\r\n        dob: '',\r\n        height: '',\r\n        weight: '',\r\n        houseaddr: '',\r\n        bloodgroup: '',\r\n        allergies: '',\r\n        medication: '',\r\n        emergencyName: '',\r\n        emergencyContact: '',\r\n        loading: false,\r\n        errorMessage: ''\r\n    };\r\n\r\n    handleGender = (e, { value }) => this.setState({ gender: value })\r\n\r\n    handleAllergies = (e, { value }) => this.setState({ allergies: value })\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { ic, name, phone, gender, dob, height, weight, houseaddr, bloodgroup, allergies, medication, emergencyName, emergencyContact } = this.state;\r\n\r\n        this.setState({loading: true, errorMessage: ''});\r\n\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            await record.methods.editDetails(\r\n                ic, name, phone, gender, dob, height, weight, houseaddr, bloodgroup, allergies, medication, emergencyName, emergencyContact\r\n            ).send({ from: accounts[0] });\r\n\r\n            alert(\"Account created successfully!\");\r\n            Router.pushRoute('/list');\r\n        }\r\n        catch (err) {\r\n            this.setState({ errorMessage: err.message });\r\n            alert(\"Account already exists\");\r\n        }\r\n\r\n        this.setState({ loading: false, ic: '', name: '', phone: '', gender: '', dob: '', height: '', weight: '', houseaddr: '', bloodgroup: '', allergies: '', medication: '', emergencyName: '', emergencyContact: ''});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Segment padded><h1>Edit Record</h1></Segment>\r\n                <Segment>\r\n                <h2 style={{ marginTop: '20px', marginBottom: '30px'}}>General Information</h2>\r\n                <Divider clearing />\r\n                <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                    <Form.Group widths='equal'>\r\n                        <Form.Field>\r\n                            <label>IC</label>\r\n                            <Input\r\n                                placeholder = 'Eg. 001234010234'                \r\n                                value= {this.state.ic}\r\n                                onChange= {event => \r\n                                    this.setState({ ic: event.target.value })}                           \r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Full Name</label>\r\n                            <Input\r\n                                placeholder = 'Eg. John Smith'                        \r\n                                value= {this.state.name}\r\n                                onChange= {event => \r\n                                    this.setState({ name: event.target.value })}                           \r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Phone</label>\r\n                            <Input\r\n                                placeholder = 'Eg. 0123456789'\r\n                                value= {this.state.phone}\r\n                                onChange= {event => \r\n                                    this.setState({ phone: event.target.value })}  \r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Group>\r\n                    <br/>              \r\n                    <Form.Group widths='equal'>\r\n                        <Form.Field \r\n                                label='Gender' \r\n                                control={Select} \r\n                                options={options} \r\n                                onChange={this.handleGender}\r\n                        />\r\n\r\n                        <Form.Field>\r\n                            <label>Date of Birth</label>\r\n                            <Input \r\n                                placeholder = 'Eg. 01/01/1997'\r\n                                value= {this.state.dob}\r\n                                onChange= {event => \r\n                                    this.setState({ dob: event.target.value })}  \r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Height</label>\r\n                            <Input \r\n                                placeholder = 'Eg. 183'\r\n                                label={{ basic: true, content: 'cm' }}\r\n                                labelPosition='right'\r\n                                value= {this.state.height}\r\n                                onChange= {event => \r\n                                    this.setState({ height: event.target.value })}  \r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Weight</label>\r\n                            <Input \r\n                                placeholder = 'Eg. 65'\r\n                                label={{ basic: true, content: 'kg' }}\r\n                                labelPosition='right'\r\n                                value= {this.state.weight}\r\n                                onChange= {event => \r\n                                    this.setState({ weight: event.target.value })}  \r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Group>                   \r\n                   \r\n                    <br/>\r\n                    <Form.Group widths='equal'>\r\n                        <Form.TextArea\r\n                                label='House Address'\r\n                                placeholder = 'Eg. 1234, Jalan Seksyen 1/3, 31900 Kampar, Perak'\r\n                                value= {this.state.houseaddr}\r\n                                onChange= {event => \r\n                                    this.setState({ houseaddr: event.target.value })}  \r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <br/>\r\n                    <h2 style={{ marginTop: '20px', marginBottom: '30px'}}>Medical History</h2>\r\n                    <Divider clearing />                    \r\n                    <Form.Group widths='equal'>\r\n                        <Form.Field>\r\n                            <label>Blood Group</label>\r\n                            <Input \r\n                                placeholder = 'Eg. A-'\r\n                                value= {this.state.bloodgroup}\r\n                                onChange= {event => \r\n                                    this.setState({ bloodgroup: event.target.value })}  \r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field \r\n                                label='Allergies' \r\n                                control={Select} \r\n                                options={allergyOptions} \r\n                                onChange={this.handleAllergies}\r\n                        />\r\n                    </Form.Group>\r\n                    <br/>\r\n                    <Form.Group widths='equal'>\r\n                        <Form.TextArea\r\n                                label='Current Medications'\r\n                                placeholder = 'Eg. Antidepressants'\r\n                                value= {this.state.medication}\r\n                                onChange= {event => \r\n                                    this.setState({ medication: event.target.value })}  \r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <br/>\r\n                    <h2 style={{ marginTop: '20px', marginBottom: '30px'}}>Emergency Contact</h2>\r\n                    <Divider clearing />\r\n                    <Form.Group widths='equal'>\r\n                       <Form.Field>\r\n                            <label>Emergency Contact Name</label>\r\n                            <Input \r\n                                placeholder = 'Eg. Taylor Smith'\r\n                                value= {this.state.emergencyName}\r\n                                onChange= {event => \r\n                                    this.setState({ emergencyName: event.target.value })}  \r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Emergency Contact Phone</label>\r\n                            <Input \r\n                                placeholder = 'Eg. 0124995002'\r\n                                value= {this.state.emergencyContact}\r\n                                onChange= {event => \r\n                                    this.setState({ emergencyContact: event.target.value })}  \r\n                            />\r\n                        </Form.Field>\r\n                    </Form.Group>\r\n                    <br/>\r\n                    <Message error header=\"Oops!\" content={this.state.errorMessage}/>\r\n                    <Button primary loading={this.state.loading}>Edit</Button>\r\n                </Form>\r\n                </Segment>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditPatient;"]},"metadata":{},"sourceType":"module"}