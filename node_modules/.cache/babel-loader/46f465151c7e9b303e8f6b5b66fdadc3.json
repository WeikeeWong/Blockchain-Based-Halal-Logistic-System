{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Message, FormField, Select, Input, Table, Grid, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport inputdata from '../../ethereum/container';\nimport web3 from '../../ethereum/web3';\nvar options = [{\n  key: 'H',\n  text: 'Halal',\n  value: 'Halal'\n}, {\n  key: 'NH',\n  text: 'Non-Halal',\n  value: 'Non-Halal'\n}];\nvar data = [{\n  ID: '',\n  Desc: '',\n  HalStatus: '',\n  Supp: '',\n  size: ''\n}];\nvar cID = [];\nvar Booked = [];\n\nvar ContainerForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContainerForm, _Component);\n\n  var _super = _createSuper(ContainerForm);\n\n  function ContainerForm() {\n    var _this;\n\n    _classCallCheck(this, ContainerForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      _ContainerNo: '',\n      _HalalStatus: '',\n      _booked: '',\n      _StartDate: '',\n      _EndDate: '',\n      _ProductName: '',\n      _Quantity: '',\n      errorMessage: '',\n      value: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHalalStatus\", function (e, _ref) {\n      var value = _ref.value;\n      return _this.setState({\n        HalalStatus: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var _this$state, _ContainerNo, _HalalStatus, _booked, _StartDate, _EndDate, _ProductName, _Quantity, accounts;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _this$state = _this.state, _ContainerNo = _this$state._ContainerNo, _HalalStatus = _this$state._HalalStatus, _booked = _this$state._booked, _StartDate = _this$state._StartDate, _EndDate = _this$state._EndDate, _ProductName = _this$state._ProductName, _Quantity = _this$state._Quantity;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.prev = 3;\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                _context.next = 9;\n                return inputdata.methods.registerContainer(_ContainerNo, _HalalStatus, _booked, _StartDate, _EndDate, _ProductName, _Quantity).send({\n                  from: accounts[0]\n                });\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](3);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n              case 14:\n                _this.setState({\n                  _ContainerNo: '',\n                  _HalalStatus: '',\n                  _booked: '',\n                  _StartDate: '',\n                  _EndDate: '',\n                  _ProductName: '',\n                  _Quantity: '',\n                  errorMessage: '',\n                  loading: false\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(ContainerForm, [{\n    key: \"componentDidMount\",\n    value: //   getContainerStat(event){\n    //     return this.props.container.find((request, index) => {\n    //     if(this.state.value == null || this.state.value == ''){\n    //       for (var i = 0; i < this.props.contCount; i++){\n    //         if(request._booked === '' ){\n    //             this.setState({_StartDate:request._StartDate, _EndDate:request._EndDate, _ProductName:request._ProductName, _HalalStatus:request._HalalStatus,  _Quantity:request._Quantity})\n    //            this.state.value ='';\n    //            return true;\n    //          } else {\n    //            this.state.value = 'Please enter a valid and available Container ID';\n    //            return false;\n    //         }\n    //        }\n    //     }\n    //     });\n    // }\n    function componentDidMount() {\n      return this.props.container.some(function (request, index) {\n        cID[index] = request._ContainerNo;\n        Booked[index] = request._booked;\n        console.log(cID);\n        console.log();\n      });\n    }\n  }, {\n    key: \"getContainerStat\",\n    value: function getContainerStat(event) {\n      this.getContainerInfo(event);\n    }\n  }, {\n    key: \"getContainerInfo\",\n    value: function getContainerInfo(event) {\n      var _this2 = this;\n\n      var j = cID.lastIndexOf(event.target.value);\n      data = [{\n        ID: '',\n        Desc: '',\n        HalStatus: '',\n        Supp: '',\n        size: ''\n      }];\n      return this.props.defcontainer.find(function (request, index) {\n        for (var i = 0; i < _this2.props.defCount; i++) {\n          if (event.target.value === request.ContainerNo && Booked[j] != 'Non-Available' && Booked[j] != 'Destroy') {\n            _this2.setState({\n              _HalalStatus: request.HalalStatus\n            });\n\n            {\n              _this2.renderTable(request);\n            }\n\n            _this2.setState({\n              _booked: 'Available'\n            });\n\n            _this2.state.value = '';\n            return true;\n          } else if (Booked[j] == 'Non-Available' && Booked[j] == 'Destroy') {\n            _this2.state.value = 'The container is not available or destroyed';\n          } else {\n            _this2.state.value = 'Please enter a valid Container ID';\n            return false;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable(request) {\n      data = [{\n        ID: request.ContainerNo,\n        Desc: request.Description,\n        HalStatus: request.HalalStatus,\n        Supp: request.Supplier,\n        size: request.Size\n      }];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Layout, {\n        style: {\n          marginLeft: '50px',\n          marginRight: '50px',\n          marginTop: '50px'\n        }\n      }, /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\"\n      }), /*#__PURE__*/React.createElement(\"body\", {\n        style: {\n          backgroundImage: \"url('https://images.pexels.com/photos/1095814/pexels-photo-1095814.jpeg')\",\n          height: '100vh',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat'\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '70%',\n          paddingLeft: '50px'\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"ui container\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"equal width fields\"\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        align: \"center\",\n        style: {\n          color: '#ffffff',\n          fontWeight: 'bold'\n        }\n      }, \"Delivery Form\"), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          color: '#ffffff',\n          fontWeight: 'bold'\n        }\n      }, \"Container ID\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"Cid\",\n        autoComplete: \"off\",\n        value: this.state._ContainerNo,\n        onChange: function onChange(event) {\n          _this3.setState({\n            _ContainerNo: event.target.value\n          });\n\n          _this3.getContainerStat(event); //this.getContainerStat(event)\n\n        },\n        placeholder: \"C001\"\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"error\",\n        style: {\n          color: 'red',\n          fontWeight: 'bold'\n        }\n      }, this.state.value), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          color: '#ffffff',\n          fontWeight: 'bold'\n        }\n      }, \"Halal Status\"), /*#__PURE__*/React.createElement(Input, {\n        value: this.state._HalalStatus,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            _HalalStatus: event.target.value\n          });\n        },\n        placeholder: \"Halal/Non-Halal\"\n      })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          color: '#ffffff',\n          fontWeight: 'bold'\n        }\n      }, \"Start Date\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"date\",\n        value: this.state._StartDate,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            _StartDate: event.target.value\n          });\n        },\n        placeholder: \"DD/MM/YYYY\"\n      })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          color: '#ffffff',\n          fontWeight: 'bold'\n        }\n      }, \"End Date\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"date\",\n        value: this.state._EndDate,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            _EndDate: event.target.value\n          });\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          color: '#ffffff',\n          fontWeight: 'bold'\n        }\n      }, \"Product Name\"), /*#__PURE__*/React.createElement(Input, {\n        value: this.state._ProductName,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            _ProductName: event.target.value\n          });\n        },\n        placeholder: \"Fish\"\n      })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Field, null, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          color: '#ffffff',\n          fontWeight: 'bold'\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(Input, {\n        value: this.state._Quantity,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            _Quantity: event.target.value\n          });\n        },\n        placeholder: \"in Unit\"\n      })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginBottom: '20px'\n        },\n        loading: this.state.loading,\n        primary: true\n      }, \"Submit\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '30%',\n          marginLeft: '30px',\n          marginRight: '50px',\n          marginTop: '18px'\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          color: '#ffffff',\n          fontWeight: 'bold'\n        }\n      }, \"Container's Details\"), data.map(function (cont, i) {\n        return /*#__PURE__*/React.createElement(Grid, {\n          celled: true,\n          style: {\n            backgroundColor: '#ffffff'\n          }\n        }, /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h3\", null, \"Container ID\")), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h4\", null, cont.ID))), /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h3\", null, \"Description\")), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h4\", null, cont.Desc))), /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h3\", null, \"Halal Status\")), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h4\", null, cont.HalStatus))), /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h3\", null, \"Supplier\")), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h4\", null, cont.Supp))), /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h3\", null, \"Size (ft)\")), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 8\n        }, /*#__PURE__*/React.createElement(\"h4\", null, cont.size))));\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var defCount, contCount, defcontainer, container;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return inputdata.methods.getdefContainerCount().call();\n\n              case 2:\n                defCount = _context2.sent;\n                _context2.next = 5;\n                return inputdata.methods.getContainerCount().call();\n\n              case 5:\n                contCount = _context2.sent;\n                _context2.next = 8;\n                return _Promise.all(Array(_parseInt(defCount)).fill().map(function (element, index) {\n                  return inputdata.methods.defcontainer(index).call();\n                }));\n\n              case 8:\n                defcontainer = _context2.sent;\n                _context2.next = 11;\n                return _Promise.all(Array(_parseInt(contCount)).fill().map(function (element, index) {\n                  return inputdata.methods.container(index).call();\n                }));\n\n              case 11:\n                container = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  defcontainer: defcontainer,\n                  defCount: defCount,\n                  container: container,\n                  contCount: contCount\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return ContainerForm;\n}(Component);\n\nexport default ContainerForm;","map":{"version":3,"sources":["C:/Users/User/Desktop/FYP/FYP1/HalalLogistic/pages/form/cf.js"],"names":["React","Component","Form","Button","Message","FormField","Select","Input","Table","Grid","GridColumn","Layout","inputdata","web3","options","key","text","value","data","ID","Desc","HalStatus","Supp","size","cID","Booked","ContainerForm","_ContainerNo","_HalalStatus","_booked","_StartDate","_EndDate","_ProductName","_Quantity","errorMessage","loading","e","setState","HalalStatus","event","preventDefault","state","eth","getAccounts","accounts","methods","registerContainer","send","from","message","props","container","some","request","index","console","log","getContainerInfo","j","lastIndexOf","target","defcontainer","find","i","defCount","ContainerNo","renderTable","Description","Supplier","Size","marginLeft","marginRight","marginTop","backgroundImage","height","backgroundSize","backgroundRepeat","display","flexDirection","width","paddingLeft","color","fontWeight","onSubmit","getContainerStat","marginBottom","map","cont","backgroundColor","getdefContainerCount","call","getContainerCount","contCount","all","Array","fill","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button, Message, FormField, Select, Input, Table, Grid, GridColumn } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport inputdata from '../../ethereum/container';\r\nimport web3 from '../../ethereum/web3';\r\n\r\nconst options = [\r\n    { key: 'H', text: 'Halal', value: 'Halal' },\r\n    { key: 'NH', text: 'Non-Halal', value: 'Non-Halal' },\r\n]\r\n\r\nvar data= [\r\n    {ID:'',Desc:'', HalStatus:'', Supp:'', size:''}\r\n]\r\n\r\nvar cID = [];\r\nvar Booked = [];\r\n\r\n\r\nclass ContainerForm extends Component {\r\n\r\n   \r\n    state = {\r\n        _ContainerNo:'',\r\n        _HalalStatus:'',\r\n        _booked:'',\r\n        _StartDate:'',\r\n        _EndDate:'',\r\n        _ProductName:'',\r\n        _Quantity:'',\r\n        errorMessage:'',\r\n        value:'',\r\n        loading:false\r\n    };\r\n\r\n    handleHalalStatus = (e, { value }) => this.setState({ HalalStatus: value })\r\n\r\n    static async getInitialProps(){\r\n     \r\n        \r\n        const defCount = await inputdata.methods.getdefContainerCount().call();\r\n\r\n        const contCount = await inputdata.methods.getContainerCount().call();\r\n\r\n        const defcontainer = await Promise.all(\r\n            Array(parseInt(defCount)).fill().map((element, index) => {\r\n                return inputdata.methods.defcontainer(index).call()\r\n            })\r\n        );\r\n\r\n        const container = await Promise.all(\r\n          Array(parseInt(contCount)).fill().map((element, index) => {\r\n              return inputdata.methods.container(index).call()\r\n          })\r\n      );\r\n\r\n        return {defcontainer, defCount, container, contCount};\r\n\r\n    }\r\n\r\n\r\n  //   getContainerStat(event){\r\n       \r\n  //     return this.props.container.find((request, index) => {\r\n  //     if(this.state.value == null || this.state.value == ''){\r\n  //       for (var i = 0; i < this.props.contCount; i++){\r\n          \r\n  //         if(request._booked === '' ){\r\n            \r\n  //             this.setState({_StartDate:request._StartDate, _EndDate:request._EndDate, _ProductName:request._ProductName, _HalalStatus:request._HalalStatus,  _Quantity:request._Quantity})\r\n              \r\n  //            this.state.value ='';\r\n  //            return true;\r\n  //          } else {\r\n            \r\n  //            this.state.value = 'Please enter a valid and available Container ID';\r\n  //            return false;\r\n  //         }\r\n  //        }\r\n  //     }\r\n  //     });\r\n  // }\r\n\r\n    componentDidMount(){\r\n      return this.props.container.some((request, index) => {\r\n        cID[index] = request._ContainerNo;\r\n        Booked[index] = request._booked;\r\n        console.log(cID);\r\n        console.log()\r\n      });\r\n    }\r\n\r\n  getContainerStat(event){\r\n    \r\n\r\n     this.getContainerInfo(event);\r\n}\r\n\r\n    getContainerInfo(event){\r\n      var j = cID.lastIndexOf(event.target.value);\r\n       data= [\r\n           {ID:'',Desc:'', HalStatus:'', Supp:'', size:''}\r\n       ]\r\n       \r\n        return this.props.defcontainer.find((request, index) => {\r\n        for (var i = 0; i < this.props.defCount; i++){\r\n             if(event.target.value ===  request.ContainerNo && Booked[j] != 'Non-Available' && Booked[j] != 'Destroy'){\r\n                this.setState({_HalalStatus:request.HalalStatus})\r\n                {this.renderTable(request)}\r\n                this.setState({_booked: 'Available'})\r\n                \r\n                this.state.value ='';\r\n                \r\n                return true;\r\n              } else if(Booked[j] == 'Non-Available' && Booked[j] == 'Destroy'){\r\n                this.state.value = 'The container is not available or destroyed';\r\n              } else {\r\n                \r\n                this.state.value = 'Please enter a valid Container ID';\r\n                return false;\r\n             }\r\n            }\r\n        });\r\n    }\r\n\r\n    renderTable(request){\r\n        \r\n        data= [\r\n            {ID:request.ContainerNo,Desc:request.Description, HalStatus:request.HalalStatus, Supp:request.Supplier, size:request.Size}\r\n        ]\r\n        \r\n    }\r\n    \r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const {_ContainerNo, _HalalStatus, _booked, _StartDate, _EndDate, _ProductName, _Quantity } = this.state;\r\n\r\n        this.setState({ loading: true, errorMessage: '' });\r\n\r\n    try{\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        await inputdata.methods.registerContainer(_ContainerNo, _HalalStatus, _booked, _StartDate, _EndDate, _ProductName, _Quantity).send({from: accounts [0]});\r\n\r\n    } catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n     }\r\n\r\n     this.setState({ _ContainerNo:'',\r\n     _HalalStatus:'',_booked:'', _StartDate:'', _EndDate:'', _ProductName:'',_Quantity:'', errorMessage:'', loading:false });\r\n};\r\n\r\n    render() {\r\n        return (\r\n            \r\n        <Layout style={{marginLeft:'50px', marginRight:'50px', marginTop:'50px'}}>\r\n            <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\"/>\r\n            \r\n            <body style={{ backgroundImage:\"url('https://images.pexels.com/photos/1095814/pexels-photo-1095814.jpeg')\", \r\n            height:'100vh',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'}}>\r\n            <div style={{display:'flex', flexDirection: 'row'}}>\r\n            <div style={{width:'70%', paddingLeft:'50px'}}>\r\n            <div class=\"ui container\">\r\n                <div class=\"equal width fields\">\r\n                <h2 align=\"center\" style={{color:'#ffffff', fontWeight:'bold'}}>Delivery Form</h2>\r\n                <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                    \r\n                        <Form.Field>\r\n                        <label style={{color:'#ffffff', fontWeight:'bold'}}>Container ID</label>\r\n                        <Input type=\"text\" id ='Cid' autoComplete=\"off\"\r\n                            value={this.state._ContainerNo}\r\n                            onChange={event =>{\r\n                                this.setState({_ContainerNo: event.target.value});this.getContainerStat(event)\r\n                                //this.getContainerStat(event)\r\n                                }}placeholder=\"C001\"/>\r\n                        \r\n                        </Form.Field>\r\n                        \r\n                        <p id ='error' style={{color:'red', fontWeight:'bold'}}>{this.state.value}</p>\r\n                        <br/>\r\n                        <Form.Field>\r\n                        <label style={{color:'#ffffff', fontWeight:'bold'}}>Halal Status</label>\r\n                        <Input \r\n                            value={this.state._HalalStatus}\r\n                            onChange={event =>\r\n                                this.setState({_HalalStatus: event.target.value})}placeholder=\"Halal/Non-Halal\"\r\n                        />\r\n                        </Form.Field>\r\n                        <br/>\r\n                        <Form.Field>\r\n                        <label style={{color:'#ffffff', fontWeight:'bold'}}>Start Date</label>\r\n                        <Input type='date'\r\n                        value={this.state._StartDate}\r\n                        onChange={event =>\r\n                            this.setState({_StartDate: event.target.value})}placeholder=\"DD/MM/YYYY\"/>\r\n                        \r\n                        </Form.Field>\r\n                        <br/>\r\n                        <Form.Field>\r\n                        <label style={{color:'#ffffff', fontWeight:'bold'}}>End Date</label>\r\n                        <Input type = 'date'\r\n                            value={this.state._EndDate}\r\n                            onChange={event =>\r\n                                this.setState({_EndDate: event.target.value})}\r\n                        />\r\n                        </Form.Field>\r\n                        <br/>\r\n                        <Form.Field>\r\n                        <label style={{color:'#ffffff', fontWeight:'bold'}}>Product Name</label>\r\n                        <Input\r\n                            value={this.state._ProductName}\r\n                            onChange={event =>\r\n                                this.setState({_ProductName: event.target.value})}placeholder=\"Fish\"\r\n                        />\r\n                        </Form.Field>\r\n                        <br/>\r\n                        <Form.Field>\r\n                        <label style={{color:'#ffffff', fontWeight:'bold'}}>Quantity</label>\r\n                        <Input \r\n                            value={this.state._Quantity}\r\n                            onChange={event =>\r\n                                this.setState({_Quantity: event.target.value})}placeholder=\"in Unit\"\r\n                        />\r\n                        </Form.Field>\r\n                        <br/>\r\n                    \r\n                    <Message error header=\"Oops!\" content={this.state.errorMessage}/>\r\n                    <Button style={{marginBottom:'20px'}} loading= {this.state.loading} primary>Submit</Button>\r\n                </Form>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                <div style={{width:'30%', marginLeft:'30px', marginRight:'50px', marginTop:'18px'}}>\r\n                    <h2 style={{color:'#ffffff', fontWeight:'bold'}}>Container's Details</h2>\r\n                    \r\n                    {data.map((cont, i) => {\r\n                    return(\r\n                        <Grid celled style={{backgroundColor:'#ffffff'}}>\r\n                        <Grid.Row>\r\n                          <Grid.Column width={8}>\r\n                            <h3>Container ID</h3>\r\n                          </Grid.Column>\r\n                          <Grid.Column width={8}>\r\n                            <h4>{cont.ID}</h4>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                    \r\n                        <Grid.Row>\r\n                          <Grid.Column width={8}>\r\n                            <h3>Description</h3>\r\n                          </Grid.Column>\r\n                          <Grid.Column width={8}>\r\n                            <h4>{cont.Desc}</h4>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n\r\n                        <Grid.Row>\r\n                          <Grid.Column width={8}>\r\n                            <h3>Halal Status</h3>\r\n                          </Grid.Column>\r\n                          <Grid.Column width={8}>\r\n                            <h4>{cont.HalStatus}</h4>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n\r\n                        <Grid.Row>\r\n                          <Grid.Column width={8}>\r\n                            <h3>Supplier</h3>\r\n                          </Grid.Column>\r\n                          <Grid.Column width={8}>\r\n                            <h4>{cont.Supp}</h4>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n\r\n                        <Grid.Row>\r\n                          <Grid.Column width={8}>\r\n                            <h3>Size (ft)</h3>\r\n                          </Grid.Column>\r\n                          <Grid.Column width={8}>\r\n                            <h4>{cont.size}</h4>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      </Grid>\r\n                    )\r\n                })}\r\n                </div>\r\n        </div>\r\n        </body>\r\n        </Layout>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default ContainerForm;"]},"metadata":{},"sourceType":"module"}